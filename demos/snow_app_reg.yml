---
- name: Create a ServiceNow application in AAP
  hosts: localhost
  gather_facts: false
  become: false

  vars:
    snow_host: "{{ lookup('env', 'SN_HOST') }}"
    snow_username: "{{ lookup('env', 'SN_USERNAME') }}"
    snow_pwd: "{{ lookup('env', 'SN_PASSWORD') }}"
    snow_instance: "{{ (snow_host | ansible.builtin.urlsplit('hostname')).split('.')[0]  }}"
    snow_app_name: "ServiceNow App ({{ snow_instance }})"
    snow_oauth_entity_name: "Ansible Controller OAuth"
    controller_host: "{{ lookup('env', 'CONTROLLER_HOST') }}"

  tasks:
    - name: AAP | Delete existing application (if exists)
      register: r_application
      ansible.controller.application:
        name: "{{ snow_app_name }}"
        organization: Autodotes
        state: "absent"

    - name: AAP | Create Service Now application
      register: r_application_aap
      ansible.builtin.uri:
        url: https://{{ controller_host }}/api/v2/applications/
        method: post
        status_code: [200,201]
        headers:
          Authorization: "Bearer {{ lookup('env', 'CONTROLLER_OAUTH_TOKEN') }}"
        body_format: json
        body:
          name: "{{ snow_app_name }}"
          description: "Application for integrating with ServiceNow ITSM ({{ snow_instance }})"
          client_type: "confidential"
          redirect_uris: "https://{{ snow_instance }}.service-now.com/oauth_redirect.do"
          authorization_grant_type: "authorization-code"
          organization: 3 # Autodotes

    # Disable business rule on oauth_entity: auto set client fields

    - name: Create oauth entity
      ansible.builtin.include_role:
        name: snow.configuration.oauth_entity
      vars:
        oauth_entity_configurations:
          - name: "{{ snow_oauth_entity_name }}"
            access: All application scopes
            active: true
            client_id: "{{ r_application_aap.json.client_id }}"
            client_secret: "{{ r_application_aap.json.client_secret }}"
            default_grant_type: Authorization Code
            auth_url: "https://{{ controller_host }}/api/o/authorize/"
            token_url: "https://{{ controller_host }}/api/o/token/"
            redirect_url: "https://{{ snow_instance }}.service-now.com/oauth_redirect.do"
            refresh_token_lifespan: 8640000

    - debug:
        var: oauth_entity_records

    # - name: ServiceNow | Create oauth entity scope
    #   register: r_oauth_entity_scope
    #   servicenow.itsm.api:
    #     resource: oauth_entity_scope
    #     action: post
    #     data:
    #       name: Ansible Controller Write
    #       oauth_entity: "{{ r_oauth_entity.record.sys_id }}"
    #       oauth_entity_scope: write

    # - name: ServiceNow | Create oauth entity profile
    #   register: r_oauth_entity_profile
    #   servicenow.itsm.api:
    #     resource: oauth_entity_profile
    #     action: post
    #     data:
    #       name: Ansible Controller Write Profile
    #       oauth_entity: "{{ r_oauth_entity.record.sys_id }}"
    #       grant_type: Authorization Code
    #       default: true

    # - name: ServiceNow | Create oauth entity profile scope
    #   register: r_oauth_entity_profile_scope
    #   servicenow.itsm.api:
    #     resource: oauth_entity_profile_scope
    #     action: post
    #     data:
    #       sys_name: Ansible Controller Write Profile Scope
    #       oauth_entity_profile: "{{ r_oauth_entity_profile.record.sys_id }}"
    #       oauth_entity_scope: "{{ r_oauth_entity_scope.record.sys_id }}"